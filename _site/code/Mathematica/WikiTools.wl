(* ::Package:: *)

ClearAll["WikiTools`*"]

BeginPackage["WikiTools`"]

env::usage = "";
math::usage = "";
nmath::usage="";
boldParticlesName::usage="";
boldDigits::usage="";
unicodeDigits::usage="";
tableRow::usage = "";
tableHeader::usage = "";
wikiTable::usage = "";
link::usage = "";
wikiName::usage = "";
songCodes::usage = "";
texFusionRules::usage = "";
cyclesString::usage = "";
reduceAutomorphisms::usage = "";
subGroupString::usage = "";
texTable::usage = "";
frPrefix::usage = "";
ringFileName::usage = "";


<<Anyonica`

Begin["Private`"]

env[ s_String ] := 
	"{% "<> s <> " %}";

math[x_String] := 
	"$$ "<> x<>" $$";

nmath[x_String] := 
	"$$\n" <> x <> "\n$$";

tableRow[ stringList_ ] :=
	"| " <> StringRiffle[ stringList, " | " ] <> " |";

Options[tableHeader] = {"Alignment"->"Right"}; 
tableHeader[ stringList_, OptionsPattern[] ] :=
	With[{ f = Switch[ OptionValue["Alignment"], "Right", ":"<>#&, "Left", #<>":"&, "Center", Identity ] }, 
		tableRow[ stringList ] <> "\n" <>
		tableRow[ stringList/.s_String -> f["------"] ]
	];
	
Options[wikiTable] = Options[tableHeader];	
wikiTable[ m_?MatrixQ, opts:OptionsPattern[] ] := 
	StringRiffle[
		Prepend[ tableHeader[ First@ m, opts ] ] @ 
		( tableRow /@ Rest[m] ),
		"\n"
	];

link[ text_, address_ ] := 
	"[ " <> text <> " ]({% link "<> address <> " %})";

Options[wikiName] = { "Short" -> False };
wikiName[ring_FusionRing,OptionsPattern[]] := 
Module[{ r, m, n, i, nonFormalName },
	nonFormalName = 
			If[ (* TeXForm crashes for names of songs so have to exclude them  *)
				Names[ring] =!= {} && FreeQ[ songCodes, FC[ring] ],
				ToString[ TeXForm[ Names[ring][[1]] ] ] <> 
				If[ OptionValue["Short"], "", ":\\ " ],
				""
			];
		
	{r,m,n,i} = 
		ToString /@ 
		FormalCode[ring];
	If[ 
		OptionValue["Short"] && nonFormalName =!= "",
		nonFormalName,
		StringJoin[
			nonFormalName,
			If[ 
				m == "1",
				StringJoin[
					"\\text{FR}^{",r, ",",n,"}_{",i,"}"
				],
				StringJoin[
					"\\text{FR}^{",r,",",m,",",n,"}_{",i,"}"
				]
			]
		]
	]
];

songCodes = 
	FC /@
	Cases[
		FRL,
		r_/;
		Names[r] =!= {} &&
		!StringFreeQ[
			First[ Names[ r ] ],
			"\\\"["
		]
	];
	
	
(* Convert bold unicode digits by mathbf *)
boldParticlesName[ string_ ] :=
  With[{
    replaceUnicode =
      Thread[ unicodeDigits -> boldDigits ]
    },
    StringReplace[ 
      string,
      replaceUnicode
    ]
  ];

unicodeDigits = 
	FromCharacterCode /@ (120811 + Range[10]);

boldDigits = 
  "\\mathbf{" <> ToString[#] <> "}"& /@
  (Range[10] - 1);
  
 
	

Options[texTable]={"Header"->None,"Alignment"->"l"};
texTable[ mat_?MatrixQ, opts:OptionsPattern[] ] :=
	Module[{ texString, hdr, al },
		hdr = OptionValue["Header"];
		texString = 
		Grid[
			If[ hdr === None, mat, Prepend[hdr] @ mat ]
		] // TeXForm // ToString // boldParticlesName;
		al = OptionValue["Alignment"];
		
		nmath[texString] //
		StringReplace[(* Add horizontal lines *)
			{ 
				"c}\n" -> "c}\n\\hline\n",
				"\n\\end" -> "\n\\hline\n\\end"
			}
		] // 
		StringReplace[
  		"\\begin{array}{c" ~~ ( cstr:"c" ... ) ~~ "}" :>
  		StringJoin[ 
    		"\\begin{array}{|",
    		al,
    		StringJoin @@ 
     		ConstantArray[al, StringLength[cstr]],
    		"|}"
    	]
  	] //
		If[
			hdr === None,
			Identity,
			StringReplace[
				#,
				{
					"\\\\\n"->"\\\\\n\\hline\n"
				}
				,
				1
			]&
		]
	
	];
	
	
reduceAutomorphisms[ cycles_List ] := 
If[
	Length[cycles] < 3, 
		DeleteCases[Cycles[{}]] @ 
		cycles,
	Module[{
		reducedCycles = 
			SortBy[ DeleteCases[Cycles[{}]] @ cycles, LessEqual ],
		products },
		
		Reap[
		Sow /@  reducedCycles[[{1,2}]];
		Do[ 
			products = 
				PermutationProduct @@@ 
				Tuples[ reducedCycles[[;;i-1]], 2 ];
			If[
				FreeQ[ reducedCycles[[i]] ] @ products,
				Sow[ reducedCycles[[i]] ] 
			],
			{i,3,Length[reducedCycles]}
		]
		][[2,1]]
	]
]

cyclesString[ cycles_List ] := 
StringJoin[ 
	"\n\nThe fusion rules are invariant under the group generated by the following permutations:\n\n",
	StringReplace[ "   " -> " \\ " ] @
	StringReplace[ ", " -> "), (" ] @
	StringReplace[ "}\\" -> ")\\" ] @ 
	StringReplace[ "{{" -> "{(" ] @
	math[
		StringJoin[
			"\\left\\{",
			ToString[ 
				Map[ 
					boldDigits[[#]]&, 
					MatrixForm @@@ cycles,
					{4} 
				]
			] ,
			"\\right\\}" 
		]
	],
	"\n"
]

subGroupString[ ring_FusionRing ] := Module[{
	subringLinks = 
		link[ math[wikiName[#]], "pages/FRPages/"<>ringFileName[#] ]& /@ SubFusionRings[ ring ][[;;,2]],
	pstrings = 
		boldParticlesName @* math @* ToString @* TeXForm /@
		Map[ 
			unicodeDigits[[#+1]]&,
			SubFusionRings[ ring ][[;;,1]],
			{2}
		]
	},
	StringJoin[ 
		"\n\nThe following particles form non-trivial sub fusion rings\n\n", 
		wikiTable[
			Prepend[ { "Particles" , "SubRing"  } ] @
			Transpose[ 
				{ pstrings, subringLinks }
			]
		],
		"\n"
	]
];

frPrefix[ring_FusionRing] := 
	"FR"<>"_"<>StringRiffle[ ToString /@ FormalCode[ring], "_" ];

ringFileName[ ring_ ] := 
	StringRiffle[ 
		Prepend["FR"] @ ( ToString /@ FC[ring] )
		,
		"_"
	] <> ".md";
	
End[]

EndPackage[]


